// Generated from F:/3º/DLP/Lab/repo/dlp/src/parser/Cmm.g4 by ANTLR 4.13.1
package parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class CmmLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		ID=1, INT_CONSTANT=2, REAL_CONSTANT=3, CHAR_CONSTANT=4, COMMENT=5, WHITESPACE=6;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"LETTER", "DIGIT", "ID", "INT_CONSTANT", "FLOATING_POINT", "MANTISSA_AND_EXPONENT", 
			"REAL_CONSTANT", "SPECIAL_CHAR", "CHAR_CONSTANT", "NEW_LINE", "ONE_LINE_COMMENT", 
			"MULTIPLE_LINE_COMMENT", "COMMENT", "BLANKS", "WHITESPACE"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "ID", "INT_CONSTANT", "REAL_CONSTANT", "CHAR_CONSTANT", "COMMENT", 
			"WHITESPACE"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CmmLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Cmm.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0006\u00af\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0003\u0002&\b\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0005\u0002"+
		"+\b\u0002\n\u0002\f\u0002.\t\u0002\u0001\u0003\u0001\u0003\u0005\u0003"+
		"2\b\u0003\n\u0003\f\u00035\t\u0003\u0001\u0003\u0003\u00038\b\u0003\u0001"+
		"\u0004\u0005\u0004;\b\u0004\n\u0004\f\u0004>\t\u0004\u0001\u0004\u0001"+
		"\u0004\u0004\u0004B\b\u0004\u000b\u0004\f\u0004C\u0001\u0004\u0004\u0004"+
		"G\b\u0004\u000b\u0004\f\u0004H\u0001\u0004\u0001\u0004\u0005\u0004M\b"+
		"\u0004\n\u0004\f\u0004P\t\u0004\u0003\u0004R\b\u0004\u0001\u0005\u0001"+
		"\u0005\u0004\u0005V\b\u0005\u000b\u0005\f\u0005W\u0003\u0005Z\b\u0005"+
		"\u0001\u0005\u0001\u0005\u0003\u0005^\b\u0005\u0001\u0005\u0001\u0005"+
		"\u0004\u0005b\b\u0005\u000b\u0005\f\u0005c\u0003\u0005f\b\u0005\u0001"+
		"\u0006\u0001\u0006\u0003\u0006j\b\u0006\u0001\u0007\u0001\u0007\u0001"+
		"\u0007\u0001\u0007\u0003\u0007p\b\u0007\u0001\b\u0001\b\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0003"+
		"\b~\b\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0003\t\u0085\b\t\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0005\n\u008b\b\n\n\n\f\n\u008e\t\n\u0001\n"+
		"\u0001\n\u0003\n\u0092\b\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0005\u000b\u0098\b\u000b\n\u000b\f\u000b\u009b\t\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\u000b\u0001\f\u0001\f\u0003\f\u00a2\b\f\u0001\f\u0001\f\u0001"+
		"\r\u0001\r\u0001\u000e\u0001\u000e\u0004\u000e\u00aa\b\u000e\u000b\u000e"+
		"\f\u000e\u00ab\u0001\u000e\u0001\u000e\u0002\u008c\u0099\u0000\u000f\u0001"+
		"\u0000\u0003\u0000\u0005\u0001\u0007\u0002\t\u0000\u000b\u0000\r\u0003"+
		"\u000f\u0000\u0011\u0004\u0013\u0000\u0015\u0000\u0017\u0000\u0019\u0005"+
		"\u001b\u0000\u001d\u0006\u0001\u0000\u0007\u0002\u0000AZaz\u0001\u0000"+
		"09\u0001\u000019\u0002\u0000EEee\u0002\u0000++--\u0002\u0000\n\n\r\r\u0002"+
		"\u0000\t\t  \u00c1\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001"+
		"\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000"+
		"\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000"+
		"\u0000\u0000\u0001\u001f\u0001\u0000\u0000\u0000\u0003!\u0001\u0000\u0000"+
		"\u0000\u0005%\u0001\u0000\u0000\u0000\u00077\u0001\u0000\u0000\u0000\t"+
		"Q\u0001\u0000\u0000\u0000\u000bY\u0001\u0000\u0000\u0000\ri\u0001\u0000"+
		"\u0000\u0000\u000fo\u0001\u0000\u0000\u0000\u0011}\u0001\u0000\u0000\u0000"+
		"\u0013\u0084\u0001\u0000\u0000\u0000\u0015\u0086\u0001\u0000\u0000\u0000"+
		"\u0017\u0093\u0001\u0000\u0000\u0000\u0019\u00a1\u0001\u0000\u0000\u0000"+
		"\u001b\u00a5\u0001\u0000\u0000\u0000\u001d\u00a9\u0001\u0000\u0000\u0000"+
		"\u001f \u0007\u0000\u0000\u0000 \u0002\u0001\u0000\u0000\u0000!\"\u0007"+
		"\u0001\u0000\u0000\"\u0004\u0001\u0000\u0000\u0000#&\u0005_\u0000\u0000"+
		"$&\u0003\u0001\u0000\u0000%#\u0001\u0000\u0000\u0000%$\u0001\u0000\u0000"+
		"\u0000&,\u0001\u0000\u0000\u0000\'+\u0005_\u0000\u0000(+\u0003\u0001\u0000"+
		"\u0000)+\u0003\u0003\u0001\u0000*\'\u0001\u0000\u0000\u0000*(\u0001\u0000"+
		"\u0000\u0000*)\u0001\u0000\u0000\u0000+.\u0001\u0000\u0000\u0000,*\u0001"+
		"\u0000\u0000\u0000,-\u0001\u0000\u0000\u0000-\u0006\u0001\u0000\u0000"+
		"\u0000.,\u0001\u0000\u0000\u0000/3\u0007\u0002\u0000\u000002\u0003\u0003"+
		"\u0001\u000010\u0001\u0000\u0000\u000025\u0001\u0000\u0000\u000031\u0001"+
		"\u0000\u0000\u000034\u0001\u0000\u0000\u000048\u0001\u0000\u0000\u0000"+
		"53\u0001\u0000\u0000\u000068\u00050\u0000\u00007/\u0001\u0000\u0000\u0000"+
		"76\u0001\u0000\u0000\u00008\b\u0001\u0000\u0000\u00009;\u0003\u0007\u0003"+
		"\u0000:9\u0001\u0000\u0000\u0000;>\u0001\u0000\u0000\u0000<:\u0001\u0000"+
		"\u0000\u0000<=\u0001\u0000\u0000\u0000=?\u0001\u0000\u0000\u0000><\u0001"+
		"\u0000\u0000\u0000?A\u0005.\u0000\u0000@B\u0003\u0007\u0003\u0000A@\u0001"+
		"\u0000\u0000\u0000BC\u0001\u0000\u0000\u0000CA\u0001\u0000\u0000\u0000"+
		"CD\u0001\u0000\u0000\u0000DR\u0001\u0000\u0000\u0000EG\u0003\u0007\u0003"+
		"\u0000FE\u0001\u0000\u0000\u0000GH\u0001\u0000\u0000\u0000HF\u0001\u0000"+
		"\u0000\u0000HI\u0001\u0000\u0000\u0000IJ\u0001\u0000\u0000\u0000JN\u0005"+
		".\u0000\u0000KM\u0003\u0007\u0003\u0000LK\u0001\u0000\u0000\u0000MP\u0001"+
		"\u0000\u0000\u0000NL\u0001\u0000\u0000\u0000NO\u0001\u0000\u0000\u0000"+
		"OR\u0001\u0000\u0000\u0000PN\u0001\u0000\u0000\u0000Q<\u0001\u0000\u0000"+
		"\u0000QF\u0001\u0000\u0000\u0000R\n\u0001\u0000\u0000\u0000SZ\u0003\t"+
		"\u0004\u0000TV\u0003\u0007\u0003\u0000UT\u0001\u0000\u0000\u0000VW\u0001"+
		"\u0000\u0000\u0000WU\u0001\u0000\u0000\u0000WX\u0001\u0000\u0000\u0000"+
		"XZ\u0001\u0000\u0000\u0000YS\u0001\u0000\u0000\u0000YU\u0001\u0000\u0000"+
		"\u0000Z[\u0001\u0000\u0000\u0000[]\u0007\u0003\u0000\u0000\\^\u0007\u0004"+
		"\u0000\u0000]\\\u0001\u0000\u0000\u0000]^\u0001\u0000\u0000\u0000^e\u0001"+
		"\u0000\u0000\u0000_f\u0003\t\u0004\u0000`b\u0003\u0007\u0003\u0000a`\u0001"+
		"\u0000\u0000\u0000bc\u0001\u0000\u0000\u0000ca\u0001\u0000\u0000\u0000"+
		"cd\u0001\u0000\u0000\u0000df\u0001\u0000\u0000\u0000e_\u0001\u0000\u0000"+
		"\u0000ea\u0001\u0000\u0000\u0000f\f\u0001\u0000\u0000\u0000gj\u0003\t"+
		"\u0004\u0000hj\u0003\u000b\u0005\u0000ig\u0001\u0000\u0000\u0000ih\u0001"+
		"\u0000\u0000\u0000j\u000e\u0001\u0000\u0000\u0000kl\u0005\\\u0000\u0000"+
		"lp\u0005n\u0000\u0000mn\u0005\\\u0000\u0000np\u0005t\u0000\u0000ok\u0001"+
		"\u0000\u0000\u0000om\u0001\u0000\u0000\u0000p\u0010\u0001\u0000\u0000"+
		"\u0000qr\u0005\'\u0000\u0000rs\t\u0000\u0000\u0000s~\u0005\'\u0000\u0000"+
		"tu\u0005\'\u0000\u0000uv\u0005\\\u0000\u0000vw\u0003\u0007\u0003\u0000"+
		"wx\u0005\'\u0000\u0000x~\u0001\u0000\u0000\u0000yz\u0005\'\u0000\u0000"+
		"z{\u0003\u000f\u0007\u0000{|\u0005\'\u0000\u0000|~\u0001\u0000\u0000\u0000"+
		"}q\u0001\u0000\u0000\u0000}t\u0001\u0000\u0000\u0000}y\u0001\u0000\u0000"+
		"\u0000~\u0012\u0001\u0000\u0000\u0000\u007f\u0085\u0007\u0005\u0000\u0000"+
		"\u0080\u0081\u0005\n\u0000\u0000\u0081\u0085\u0005\r\u0000\u0000\u0082"+
		"\u0083\u0005\r\u0000\u0000\u0083\u0085\u0005\n\u0000\u0000\u0084\u007f"+
		"\u0001\u0000\u0000\u0000\u0084\u0080\u0001\u0000\u0000\u0000\u0084\u0082"+
		"\u0001\u0000\u0000\u0000\u0085\u0014\u0001\u0000\u0000\u0000\u0086\u0087"+
		"\u0005/\u0000\u0000\u0087\u0088\u0005/\u0000\u0000\u0088\u008c\u0001\u0000"+
		"\u0000\u0000\u0089\u008b\t\u0000\u0000\u0000\u008a\u0089\u0001\u0000\u0000"+
		"\u0000\u008b\u008e\u0001\u0000\u0000\u0000\u008c\u008d\u0001\u0000\u0000"+
		"\u0000\u008c\u008a\u0001\u0000\u0000\u0000\u008d\u0091\u0001\u0000\u0000"+
		"\u0000\u008e\u008c\u0001\u0000\u0000\u0000\u008f\u0092\u0003\u0013\t\u0000"+
		"\u0090\u0092\u0005\u0000\u0000\u0001\u0091\u008f\u0001\u0000\u0000\u0000"+
		"\u0091\u0090\u0001\u0000\u0000\u0000\u0092\u0016\u0001\u0000\u0000\u0000"+
		"\u0093\u0094\u0005/\u0000\u0000\u0094\u0095\u0005*\u0000\u0000\u0095\u0099"+
		"\u0001\u0000\u0000\u0000\u0096\u0098\t\u0000\u0000\u0000\u0097\u0096\u0001"+
		"\u0000\u0000\u0000\u0098\u009b\u0001\u0000\u0000\u0000\u0099\u009a\u0001"+
		"\u0000\u0000\u0000\u0099\u0097\u0001\u0000\u0000\u0000\u009a\u009c\u0001"+
		"\u0000\u0000\u0000\u009b\u0099\u0001\u0000\u0000\u0000\u009c\u009d\u0005"+
		"*\u0000\u0000\u009d\u009e\u0005/\u0000\u0000\u009e\u0018\u0001\u0000\u0000"+
		"\u0000\u009f\u00a2\u0003\u0015\n\u0000\u00a0\u00a2\u0003\u0017\u000b\u0000"+
		"\u00a1\u009f\u0001\u0000\u0000\u0000\u00a1\u00a0\u0001\u0000\u0000\u0000"+
		"\u00a2\u00a3\u0001\u0000\u0000\u0000\u00a3\u00a4\u0006\f\u0000\u0000\u00a4"+
		"\u001a\u0001\u0000\u0000\u0000\u00a5\u00a6\u0007\u0006\u0000\u0000\u00a6"+
		"\u001c\u0001\u0000\u0000\u0000\u00a7\u00aa\u0003\u001b\r\u0000\u00a8\u00aa"+
		"\u0003\u0013\t\u0000\u00a9\u00a7\u0001\u0000\u0000\u0000\u00a9\u00a8\u0001"+
		"\u0000\u0000\u0000\u00aa\u00ab\u0001\u0000\u0000\u0000\u00ab\u00a9\u0001"+
		"\u0000\u0000\u0000\u00ab\u00ac\u0001\u0000\u0000\u0000\u00ac\u00ad\u0001"+
		"\u0000\u0000\u0000\u00ad\u00ae\u0006\u000e\u0000\u0000\u00ae\u001e\u0001"+
		"\u0000\u0000\u0000\u001a\u0000%*,37<CHNQWY]ceio}\u0084\u008c\u0091\u0099"+
		"\u00a1\u00a9\u00ab\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}